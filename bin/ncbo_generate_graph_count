#!/usr/bin/env ruby

# Exit cleanly from an early interrupt
Signal.trap("INT") { exit 1 }

# Set up the bundled gems in our environment
require 'bundler/setup'

# Configure the process for the current cron configuration.
require_relative '../lib/ncbo_cron'
config_exists = File.exist?(File.expand_path('../../config/config.rb', __FILE__))
abort("Please create a config/config.rb file using the config/config.rb.sample as a template") unless config_exists
require_relative '../config/config'
require_relative '../lib/ncbo_cron/graphs_counts'

require 'optparse'
options = {}
opt_parser = OptionParser.new do |opts|
  options[:savefile] = NcboCron.settings.graphs_counts_report_path
  opts.on('--store FILEPATH', 'save the results in this file') do |filepath|
    options[:savefile] = filepath
  end
  options[:logfile] = STDOUT
  opts.on( '-l', '--logfile FILE', "Write log to FILE (default is 'bulk_load_mapping.log')" ) do |filename|
    options[:logfile] = filename
  end
  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
end
opt_parser.parse!

logger = Logger.new(options[:logfile])
puts "Processing details are logged to #{options[:logfile]}"

NcboCron::GraphsCounts.new(logger, options[:savefile]).run
